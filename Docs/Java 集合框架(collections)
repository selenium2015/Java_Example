Java 集合框架

集合框架是一个用来代表和操纵集合的统一架构。

所有的集合框架都包含如下内容：
    接口：是代表集合的抽象数据类型。接口允许集合独立操纵其代表的细节。在面向对象的语言，接口通常形成一个层次。
    实现（类）：是集合接口的具体实现。从本质上讲，它们是可重复使用的数据结构。
    算法：是实现集合接口的对象里的方法执行的一些有用的计算，例如：搜索和排序。这些算法被称为多态，那是因为相同的方法可以在相似的接口上有着不同的实现。
    
除了集合，该框架也定义了几个Map接口和类。Map里存储的是键/值对。尽管Map不是collections，但是它们完全整合在集合中。


 集合框架被设计成要满足以下几个目标。 
    该框架必须是高性能的。基本集合（动态数组，链表，树，哈希表）的实现也必须是高效的。
    该框架允许不同类型的集合，以类似的方式工作，具有高度的互操作性。
    对一个集合的扩展和适应必须是简单的。
    
==========================
集合类
	Java提供了一套实现了Collection接口的标准集合类。其中一些是具体类，这些类可以直接拿来使用，而另外一些是抽象类，提供了接口的部分实现。 
	


=========================
集合算法
 集合框架定义了几种算法，可用于集合和映射。这些算法被定义为集合类的静态方法。
  在尝试比较不兼容的类型时，一些方法能够抛出 ClassCastException异常。当试图修改一个不可修改的集合时，抛出UnsupportedOperationException异常。
   集合定义三个静态的变量：EMPTY_SET EMPTY_LIST，EMPTY_MAP的。这些变量都不可改变。
   

 =========================
  如何使用迭代器 
  通常情况下，你会希望遍历一个集合中的元素。例如，显示集合中的每个元素。
做到这一点最简单的方法是采用一个迭代器，它是一个对象，实现了Iterator 接口或ListIterator接口。
迭代器，使你能够通过循环来得到或删除集合的元素。ListIterator继承了Iterator，以允许双向遍历列表和修改元素。 
 
 
 
 
 =========================  
如何使用比较器
 TreeSet和TreeMap的按照排序顺序来存储元素. 然而，这是通过比较器来精确定义按照什么样的排序顺序。
 这个接口可以让我们以不同的方式来排序一个集合。
 Comparator接口
 
  =========================  
  总结 
 Java集合框架为程序员提供了预先包装的数据结构和算法来操纵他们。
集合是一个对象，可容纳其他对象的引用。集合接口声明对每一种类型的集合可以执行的操作。
集合框架的类和接口均在java.util包中。
 




















	
    
     
